version: 2.1
executors:
  node10:
    docker:
      - image: circleci/node:10
        environment:
          NPM_CONFIG_PREFIX: "~/.npm-global"
    working_directory: ~/repo

orbs:
  helix-post-deploy: adobe/helix-post-deploy@1.10.0

commands:
  setup:
    steps:
      # do this prior to the checkout, as there might be a "fastly" directory
      - run:
          name: Installing Fastly CLI
          command: mkdir ~/.bin && curl -L https://github.com/fastly/cli/releases/download/v0.18.1/fastly_v0.18.1_linux-386.tar.gz | tar zxv && mv fastly ~/.bin/ && echo 'export PATH=$PATH:~/.bin' >> $BASH_ENV
      - checkout
      - restore_cache:
          keys:
            - v3-dependencies-{{ arch }}-{{ checksum "package-lock.json" }}
      - run:
          name: install npm 6.9.0
          command: sudo npm -g install npm@6.9.0
      - run:
          name: Installing Dependencies
          command: npm ci
      - save_cache:
          paths:
            - node_modules
          key: v3-dependencies-{{ arch }}-{{ checksum "package-lock.json" }}
      - run:
          name: prepare test git user
          command: git config --global user.email "circleci@example.com" && git config --global user.name "CircleCi Build"


jobs:
  build:
    executor: node10
    steps:
      - setup
      - run: mkdir junit
      - run:
          name: Lint
          command: npm run lint
      - run:
          name: Getting Code Coverage
          command: npm run test-ci
      - store_test_results:
          path: junit
      - store_artifacts:
          path: junit

  semantic-release:
    executor: node10
    steps:
      - setup
      - run:
          name: revert changes to package-lock.json
          command: git checkout -- package-lock.json
      - helix-post-deploy/config-wsk
      - helix-post-deploy/config-env
      - run:
          name: Semantic Release
          command: npm run semantic-release
      - run:
          name: Post-Deployment Integration Test
          command: npm run test-postdeploy
      - store_test_results:
          path: junit
      - run:
          name: Link Sequences
          command: npm run deploy-sequences
      - helix-post-deploy/monitoring:
          statuspage_name: Helix Dispatch
          statuspage_group: Delivery
          newrelic_group_policy: Delivery Repeated Failure

  branch-deploy:
    executor: node10
    steps:
      - setup
      - run:
          name: revert changes to package-lock.json
          command: git checkout -- package-lock.json
      - helix-post-deploy/config-wsk
      - run:
          name: Init Fastly Service
          command: |
            echo $(fastly service search --name=${CIRCLE_PROJECT_REPONAME}-${CIRCLE_BRANCH} || echo "ID: null") | head -n 1 | sed -e 's/ID: /ID=/' | sed -e 's/ .*//' >> $BASH_ENV
            source $BASH_ENV
            echo $ID
            if [ "$ID" = "null" ]; then
              echo "ID is unset";
              fastly service create --name=${CIRCLE_PROJECT_REPONAME}-${CIRCLE_BRANCH} | sed -e "s/SUCCESS: Created service /ID=/" >> $BASH_ENV;
              source $BASH_ENV;
              echo New Service $ID;

              fastly domain  add          -s $ID --version=1 --name=${CIRCLE_PROJECT_REPONAME}-${CIRCLE_BRANCH}.edgecompute.app
              fastly backend add          -s $ID --version=1 --name=GitHub --address=github.com --use-ssl --override-host=github.com --port=443
              fastly backend add          -s $ID --version=1 --name=AdobeRuntime --address=adobeioruntime.net --use-ssl --override-host=adobeioruntime.net --port=443
              fastly logging https create -s $ID --version=1 --name=stdout --content-type=application/json --header-name=private_key --header-value=$CORALOGIX_KEY --url=https://api.coralogix.com/logs/rest/singles --json-format=1 --message-type=blank --placement=none
            else
              echo "ID is set to '$ID'";
            fi

      - run:
          name: Upgrade AssemblyScript version
          # the assemblyscript versions needed by npm test and npm pack are not aligned
          command: npm install -D "assemblyscript@0.14.11"
          
      - run:
          name: Package
          command: npm pack

      - run:
          name: Branch Deployment
          command: npm run deploy-ci
      - run:
          name: Post-Deployment Integration Test
          command: npm run test-postdeploy
      - store_test_results:
          path: junit

workflows:
  version: 2
  build:
    jobs:
      - build
      - branch-deploy:
          requires:
            - build
          filters:
            branches:
              ignore: master
      - semantic-release:
          requires:
            - build
          filters:
            branches:
              only: master
